name: Deploy R packages

on:
  push:
    tags:
      - "v*"
    paths-ignore:
      - 'README.md'
      - 'LICENSE.txt'
      - '.github/**'
      - 'examples/**'
      - 'figs/**'
      - '*.Rcheck/**'
      - '.DS_Store'
      - 'bspcov_*.tar.gz'
      - 'CHANGELOG.md'

permissions: 
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history for git log commands

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      - name: Install R Package Build Dependencies on MacOS, from https://github.com/tdhock/atime/commit/d3d6220f08c9daa617e880b7cd57c958576f0ff4#diff-9c940e8ad2b7bc4c26ec3da57b94bc00e73e2166cfed689da51a4c59bcc0a310
        if: ${{ runner.os == 'macOS' }}
        uses: r-hub/actions/setup-r-sysreqs@v1
        with:
          type: 'minimal'

      - uses: r-lib/actions/setup-renv@v2
      
      - uses: r-lib/actions/setup-tinytex@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
      - uses: r-lib/actions/check-r-package@v2
        with:
          args: 'c("--no-manual", "--as-cran")'
          error-on: '"error"'
          check-dir: '"check"'
      
      - name: get version
        run: |
          export VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//g')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo $VERSION

      - name: generate changelog
        run: |
          # Get the latest tag and the previous tag for changelog
          LATEST_TAG=$(git describe --tags --abbrev=0)
          PREV_TAG=$(git describe --tags --abbrev=0 $LATEST_TAG^)
          
          echo "## Changes in $LATEST_TAG" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          if [ "$PREV_TAG" != "$LATEST_TAG" ]; then
            git log --format="### %s%n%n%b%n" $PREV_TAG..$LATEST_TAG >> CHANGELOG.md || echo "No commits found between tags"
            echo "" >> CHANGELOG.md
            echo "## Commit History" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            git log --oneline $PREV_TAG..$LATEST_TAG | sed 's/^/- /' >> CHANGELOG.md || echo "No commit history available"
          else
            echo "### Recent commits" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            git log --format="### %s%n%n%b%n" -10 >> CHANGELOG.md || echo "No commits available"
            echo "" >> CHANGELOG.md
            echo "## Recent Commit History" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            git log --oneline -10 | sed 's/^/- /' >> CHANGELOG.md || echo "No commit history available"
          fi
          
          cat CHANGELOG.md

      - name: update DESCRIPTION (version and date)
        run: |
          sed -i "s/Version: [^\"]*/Version: ${VERSION}/g" "DESCRIPTION"
          sed -i "s/Date: [^\"]*/Date: `date +'%Y-%m-%d'`/g" "DESCRIPTION"
          sed -i "s/Packaged: [^\"]*/Packaged: `date +'%Y-%m-%d %H:%M:%S'` UTC; Kyeongwon Lee/g" "DESCRIPTION"
      
      - name: build package and manual
        run: |
          R CMD build .
          tar zxvf bspcov_$VERSION.tar.gz   
          R CMD Rd2pdf --force --no-preview --output=bspcov-manual.pdf bspcov
      
      - name: create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get latest tag again for the release command
          LATEST_TAG=$(git describe --tags --abbrev=0)
          
          # Create release with changelog
          gh release create $LATEST_TAG \
            --title "Release $VERSION" \
            --notes-file CHANGELOG.md \
            bspcov-manual.pdf \
            bspcov_*.tar.gz